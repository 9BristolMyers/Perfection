//
//  ThreadViewController.swift
//  Perfection
//
//  Created by –í–ª–∞–¥–∏–º–∏—Ä –†—É–∑–∞–≤–∏–Ω on 11/25/21.
//

import UIKit

class ThreadViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

        runLoopInThreads()
    }
    
    func runLoopInThreads() {
        
        //print(RunLoop.current)
        
        class TimeThread: Thread {
            override func main() {
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
                Timer.scheduledTimer(withTimeInterval: 0.25, repeats: true) { timer in
                    print("Tick")
                }
                // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ç–ª—é
                //RunLoop.current.run()
            }
        }
        
        let thread = TimeThread()//—Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –ø–æ—Ç–æ–∫–∞
        thread.start()
        //Runloop "—Å–ø–∏—Ç"
        Timer.scheduledTimer(withTimeInterval: 0.25, repeats: true) { timer in
            print("Tick")
            }
        RunLoop.current.run()//Runloop "–ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è" –∏ –∏–¥—ë—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ—é –∑–∞–¥–∞—á—É ‚Äì –∫–æ–¥ –Ω–∞–¥ –Ω–∏–º
        }
    }
    
    func mainThread() {
        
        Thread.detachNewThread {
            for _ in (0..<1000) {
            print("üòà")
            }
        }
              
        let thread1 = Thread {
            for _ in (0..<1000) {
            print("üñ•")
            }
        }
        
        thread1.qualityOfService = .userInteractive
                
        thread1.start()
        
        for _ in (0..<1000) {
            print("üòá")
        }
    }
    
    func timerWithDate() {
        Timer.scheduledTimer(withTimeInterval: 0.25, repeats: true) { timer in
        print(Date())
    }
        Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { timer in
        sleep(1)
        }
    }

    func memoryOverFlow() {
        
        print("start test")
        for index in 0...UInt.max {
            autoreleasepool {
                let string = NSString(format: "test + %d", index)
                print(string)
            }
        }
        print("end test")
    }

